Program Clase2MI;
const dimF = 15;
      min = 10;
      max = 155;
type vector = array [1..dimF] of integer;

procedure CargarVector (var v: vector; var dimL: integer);

	procedure CargarVectorRecursivo (var v: vector; var dimL: integer);
	var valor: integer;
	begin
		valor:= min + random (max - min + 1);
		if ((valor <> 20 ) and (dimL < dimF)) then begin
			dimL:= dimL + 1;
			v[dimL]:= valor;
			CargarVectorRecursivo (v, dimL);
		end;
	end;

	begin
		dimL:= 0;
		CargarVectorRecursivo (v, dimL);
	end;
 
procedure ImprimirVector (v: vector; dimL: integer);
	var i: integer;
	begin
     for i:= 1 to dimL do;
		writeln;
		writeln ('El número generado fue: ', v[i]);
	end;     

procedure ImprimirVectorRecursivo (v: vector; dimL: integer);
begin
		if (dimL > 0) then begin
			ImprimirVectorRecursivo (v, dimL-1);
			writeln ('El número generado fue: ', v[dimL])
		end;
end; 
   
function Sumar (v: vector; dimL: integer): integer; 

	function SumarRecursivo (v: vector; pos, dimL: integer): integer;
	begin
		if (pos <= dimL) then SumarRecursivo:= SumarRecursivo (v, pos + 1, dimL) + v[pos]
		else SumarRecursivo:=0;
	end;
	
var pos: integer; 
begin
 pos:= 1;
 Sumar:= SumarRecursivo (v, pos, dimL);
end;

function  ObtenerMaximo (v: vector; dimL: integer): integer;
begin
  if ((dimL > 1) and (v [dimL] < ObtenerMaximo(v, dimL-1))) then ObtenerMaximo:= ObtenerMaximo(v, dimL-1)
  else ObtenerMaximo:= v [dimL];
end;     
     
function  BuscarValor (v: vector; dimL, valor: integer): boolean;
begin
  	if (dimL > 0) then
		if (v [dimL] = valor) then BuscarValor:= true
		else BuscarValor:= BuscarValor(v, dimL-1, valor)
	else BuscarValor:= false
end; 

procedure ImprimirDigitos (v: vector; dimL: integer);
	procedure ImprimirDig (n: integer);
	begin;
		if (n > 0) then begin;
			ImprimirDig (n DIV 10);
			write ('  ', n MOD 10);
		end;
	end;
begin;    
	if (dimL > 0) then begin;
		ImprimirDigitos (v, dimL -1);
		writeln;
		writeln ('Los dígitos de su num fueron:');
		ImprimirDig (v [dimL]);
	end;
end; 

var dimL, suma, maximo, valor: integer; 
    v: vector;
Begin 
  CargarVector (v, dimL);
  writeln;
  if (dimL = 0) then writeln ('--- Vector sin elementos ---')
                else begin
                     ImprimirVector (v, dimL);
                     writeln;
                     writeln;
                     writeln ('Imprimir recursivo:');
                     writeln;
                     writeln;
                     ImprimirVectorRecursivo (v, dimL);
                end;             
  suma:= Sumar(v, dimL);
  writeln('La suma de los valores del vector es ', suma); 
  writeln;
  writeln;
  maximo:= ObtenerMaximo(v, dimL);
  writeln;
  writeln;
  writeln('El maximo del vector es ', maximo); 
  writeln;
  writeln;
  write ('Ingrese un valor a buscar: ');
  read (valor);
  writeln;
  writeln;
  if (BuscarValor(v, dimL, valor)) then writeln('El ', valor, ' esta en el vector')
								   else writeln('El ', valor, ' no esta en el vector');
                
  writeln;
  writeln;
  ImprimirDigitos (v, dimL);
end.
